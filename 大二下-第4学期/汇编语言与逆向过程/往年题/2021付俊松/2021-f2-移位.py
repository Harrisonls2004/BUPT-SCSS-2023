#解题思路：
# 1.初步判断密码为7位
# 2.在if判断中，对v1[17]数组进行变化
# (((*((_BYTE *)&v1[17] + v1[23]) & 3) << 6) | ((*((_BYTE *)&v1[17] + v1[23]) & 0xC0) >> 6) | *((_BYTE *)&v1[17] + v1[23]) & 0x3C);
# 这一句将ABCDEFGH变化成了FGCDEFAB
# 3.接着将这个与v1[19]进行异或运算，得到了新的v1[17]的值
# 4.然后将新的v1[17]与v1[21]进行比较，若完全相同，则输出“Congratulations! You are right!”
# 5.在v1[21],v1[22],v1[19],v1[20]处点击h，转化为16进制（10转16），得到以下结果：
#   v1[21] = 0x14135583;
#   v1[22] = 0xC78883;
#   v1[19] = 0x1020002;
#   v1[20] = 0x160106;
# 因为系统是小端连续存储，所以v19=[0x02,0x00,0x02,0x01,0x06,0x01,0x16]
# v21=[0x83,0x55,0x13,0x14,0x83,0x88,0xC7]

v21=[0x83,0x55,0x13,0x14,0x83,0x88,0xC7]
v19=[0x02,0x00,0x02,0x01,0x06,0x01,0x16]
flag=""
for i in range(7):
    tmp=v21[i]^v19[i]
    v17=((tmp&3)<<6) | ((tmp&0xC0)>>6) | (tmp&0x3C)
    flag+=chr(v17)
print(flag)