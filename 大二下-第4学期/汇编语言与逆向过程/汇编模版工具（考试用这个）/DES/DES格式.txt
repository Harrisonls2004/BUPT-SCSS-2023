1.有观察出输入了8字节进行加密
2.观察到调用了get subkey函数，进入此函数可以找到byte2Bit，点击key，找到密钥，为DE3_En1C
在get_key函数中发现了pc1_replace，即pc1置换；shift_left，即shift_left；pc2_replace，即pc2置换，这是典型的des加密流程
3.接下来进入encryption函数，传入FLAG和v4（即生成的密钥），发现函数的流程为ip_replace（ip置换）、16轮迭代、fp_replace（ip逆置换），和des加密流程一致，因此确认为des加密
4.点击result得到密文0xEF, 0x34, 0xD4, 0xA3, 0xC6, 0x84, 0xE4, 0x23
最后解密得到FLAG为：HarDd3s?

# 解题思路:
# 1.初步判断flag长度为8
# 2.首先将v7赋值为"REVERSE!",然后进入if语句,先后执行函数sub_40100F()和sub_401032(),
# 然后将v5与byte_42AA30进行比较,若完全相同,则输出"Proud of you!!"
# 3.接下来,我们来分析函数sub_40100F,该函数中先执行了sub_40101E函数,对固定的数据进行了变化;
# 接着执行了sub_401046函数,进行了56轮的循环,观察到这里面的byte_4280EC数组实际上是PC1置换表,这个函数进行了PC1置换;
# 然后进行十六轮的循环,通过sub_401014函数对两个子密钥进行了循环移位;
# 然后执行了sub_40100A函数,观察到这里面的byte_428124数组实际上是PC2置换表,这个函数进行了PC2置换
# 因此sub_40100F函数进行了子密钥的生成
# 4.接下来,我们来分析函数sub_401032,该函数中先执行了sub_401028函数,观察byte_42801C数组,发现实现了IP置换;
# 然后将置换后的结果分成两段赋值给v4和v3;
# 然后进行了16轮的循环,先后执行了E扩展、S盒替代、P置换、逆IP置换;
# 因此判断出这是DES加密过程
# 5.密钥为"REVERSE!",密文为byte_42AA30=[0x66, 0xD3, 0xD5, 0xF4, 0x1A, 0xBF, 0x81, 0x28]
# 6.求得flag为"NEWYEAR!"
