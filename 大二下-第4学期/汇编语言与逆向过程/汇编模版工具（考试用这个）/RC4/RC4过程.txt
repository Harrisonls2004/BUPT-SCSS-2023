1.首先先是输入加密的明文，密钥，然后v6计算key的长度
2.进入encryption函数，进入init_sbox()函数，函数中出现255等数字，联想到RC4的密钥打乱状态数组，根据密钥的值对状态数组进行置换。
3.在此函数中的最后几行%256可看出此为RC4算法的PRGA随机字节流部分，我们点击key，可以找出密钥RC4key
4.点击answer，找出密文0x1B, 0xCA, 0xAE, 0xEF, 0x1E, 0x95, 0x4B, 0xC2, 0xD5, 0xE3, 0x33, 0x76, 0x4F, 0xF9, 0x4F, 0xD2, 0xFC, 0x60, 0x96
最后解密得到Is_Th13_Simple_Rc4?

沿sub_40100A->sub_4013D0->sub_401014->sub_401190可以进入到RC4的sbox初始化函数中。从这个函数的行为特征能够判断出加密算法为RC4，例如存在初始密钥为{0xfc,0xfb,0x3b,0x0d,0x73,0x6e}；生成值为0-255的S；循环256次复制密钥到临时向量T中；循环256次用T对S进行置换。

# 解题思路:
#1.初步判断flag长度与数组byte 429B30相同,为8,byte 429B30=[0xD5，Bx23，0xA5，0x22，Bx75，BxD8，BxB7，Bx80]#2.我们的输入str作为函数sub 40100A的参数,因此我们先看看sub 40100A函数，
#我们可以看到这里面主要有两个函数sub 401014()和sub 401005()
#3.我们先看看sub 401014()函数,在这个函数中,str="WORKER",然后对字符串str的每个字符依次+2,变为"YOTMGT"#然后经过256次循环为数组dword 42CE3C依次赋值0~255,然后经过256次循环,针对str的值进行交换操作#看到这里我们能反应过来这里是RC4加密中的初始化S盒过程，而sub 401014函数就说生成密钥流的函数了
#4.接着我们査看sub 401005()函数,在这个函数中,不断进行模256的操作,结合前面的判断,这是RC4加密算法#5.最后将v6与dword 429B30进行比较，若完全相同，则输出“Wow!!!Great!!!You are a genius!!!”#6.种子密钥为"YQTMGT",密文为[0xD5，0x23，0xA5，0x22，0x75，0xD8，0xB7，0x80]
#7.求得flag="BE HAPPY